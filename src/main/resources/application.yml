server:
  port: 8006
spring:
  data:
    redis:
      cluster:
        nodes:
        - redis-cluster.redis.svc.cluster.local:6379
  kafka:
    consumer:
      bootstrap-servers: kafka-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092
      group-id: spring-log
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  writedb:
    driver-class-name: com.mysql.cj.jdbc.Driver
    jdbc-url: jdbc:mysql://gutsandgun.kro.kr:12004/log?usessl=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: root
    password: gutsandgun
    hikari:
      maximum-pool-size: 10
  readdb:
    driver-class-name: com.mysql.cj.jdbc.Driver
    jdbc-url: jdbc:mysql://gutsandgun.kro.kr:12002/read?usessl=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: root
    password: gutsandgun
    hikari:
      maximum-pool-size: 10
  jpa:
    hibernate:
      ddl-auto: update  # option type: create, create-drop, update, validate, none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy

    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL57Dialect
        storage_engine: innodb
        format_sql: true
        show-sql: true
        generate-ddl: true
    open-in-view: false

  logging:
    level:
      org:
        hibernate:
          type:
            descriptor:
              sql: trace  # query의 ?에 어떤 값이 들어가는지 TRACE Log에 값을 보여줌
