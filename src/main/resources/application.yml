server:
  port: 8006

rabbitmq:
  api:
    port: 10005
    queue: /api/queues
    queue-detail: /api/queues/
    auth: Z3V0c2FuZGd1bjpndXRzYW5kZ3Vu  #gutsandgun.kro.kr
  #    auth: c29sYml0ZXN0OnNvbGJpdGVzdDEyMTIh  #172.16.226.148
  log:
    name: LogQueue
    exchange: Log-exchange
  routing:
    key:
      log: LogQueue

spring:
  rabbitmq:
    listener:
      simple:
        prefetch: 20
    host: gutsandgun.kro.kr
    port: 11005
    username: gutsandgun
    password: gutsandgun
    virtual-host: gutsandgun
  data:
    redis:
      cluster:
        nodes:
        - redis-cluster.redis.svc.cluster.local:6379
  writedb:
    driver-class-name: com.mysql.cj.jdbc.Driver
    jdbc-url: jdbc:mysql://gutsandgun.kro.kr:12004/log?usessl=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: root
    password: gutsandgun
    hikari:
      maximum-pool-size: 100
  readdb:
    driver-class-name: com.mysql.cj.jdbc.Driver
    jdbc-url: jdbc:mysql://gutsandgun.kro.kr:12002/read?usessl=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: root
    password: gutsandgun
    hikari:
      maximum-pool-size: 100
  jpa:
    hibernate:
      ddl-auto: update  # option type: create, create-drop, update, validate, none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy

    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL57Dialect
        storage_engine: innodb
        format_sql: true
        show-sql: true
        generate-ddl: true
    open-in-view: false

  logging:
    level:
      org:
        hibernate:
          type:
            descriptor:
              sql: trace  # query의 ?에 어떤 값이 들어가는지 TRACE Log에 값을 보여줌
